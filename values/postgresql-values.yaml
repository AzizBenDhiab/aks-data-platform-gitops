# Use existing secret created by SecretProviderClass instead of hardcoded passwords
auth:
  existingSecret: "postgresql-secrets"
  secretKeys:
    adminPasswordKey: "postgres-password"
    userPasswordKey: "user-password"
    databaseKey: "database"
  username: "joget_user"  # Non-sensitive, can stay hardcoded

# Use workload identity service account
serviceAccount:
  create: false
  name: "postgresql-workload-identity"

# Primary PostgreSQL instance configuration
primary:
  persistence:
    enabled: true
    size: 10Gi
    storageClass: "managed-csi"
    accessModes:
      - ReadWriteOnce

  resources:
    limits:
      memory: 1Gi
      cpu: 500m
    requests:
      memory: 512Mi
      cpu: 250m

  # Add CSI volume for secret mounting
  extraVolumes:
  - name: secrets-store
    csi:
      driver: secrets-store.csi.k8s.io
      readOnly: true
      volumeAttributes:
        secretProviderClass: "postgresql-secrets"
  
  extraVolumeMounts:
  - name: secrets-store
    mountPath: "/mnt/secrets-store"
    readOnly: true

  # Add workload identity label - CRITICAL for Azure Key Vault access
  podLabels:
    azure.workload.identity/use: "true"

  service:
    ports:
      postgresql: 5432

  # Updated initdb to use secure passwords from secrets
  initdb:
    scripts:
      01-create-joget-db.sql: |
        -- Create Joget database and user using secure passwords from Key Vault
        CREATE DATABASE joget;
        CREATE USER joget_user WITH PASSWORD :'POSTGRES_PASSWORD';
        GRANT ALL PRIVILEGES ON DATABASE joget TO joget_user;
        ALTER USER joget_user CREATEDB;
        \c joget;
        GRANT ALL ON SCHEMA public TO joget_user;
        GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO joget_user;
        GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO joget_user;
        ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO joget_user;
        ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO joget_user;

# DISABLE read replicas for development
readReplicas:
  replicaCount: 2

# Security and permissions
volumePermissions:
  enabled: true

# Add/update metrics section
metrics:
  enabled: true
  serviceMonitor:
    enabled: true
    namespace: monitoring
    interval: 30s
    additionalLabels:
      release: monitoring-stack
  prometheusRule:
    enabled: true
    namespace: monitoring
    additionalLabels:
      release: monitoring-stack

# DISABLE backup for development
backup:
  enabled: false

# Security context
containerSecurityContext:
  enabled: true
  runAsUser: 1001
  runAsNonRoot: true

podSecurityContext:
  enabled: true
  fsGroup: 1001