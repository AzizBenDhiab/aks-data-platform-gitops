# values/superset-values.yaml - DEVELOPMENT VERSION

# Superset configuration overrides
configOverrides:
  secret: |
    SECRET_KEY = 'dev-secret-key-change-for-production'
    # Enable CORS for development
    ENABLE_CORS = True
    CORS_OPTIONS = {
      'supports_credentials': True,
      'allow_headers': ['*'],
      'resources': ['*'],
      'origins': ['http://localhost:8088']
    }

# Disable internal dependencies (we use external)
postgresql:
  enabled: false

redis:
  enabled: false

# Global environment variables for ALL containers (including init containers)
extraEnvRaw:
  - name: DB_HOST
    value: postgresql.database.svc.cluster.local
  - name: DB_PORT
    value: "5432"
  - name: DB_USER
    value: superset_user
  - name: DB_PASS
    value: dev-user-password
  - name: DB_NAME
    value: superset

# Superset Node (web server) configuration
supersetNode:
  # Database connection to external PostgreSQL
  env:
    SUPERSET_DATABASE_URI: "postgresql://superset_user:dev-user-password@postgresql.database.svc.cluster.local:5432/superset"
    DB_HOST: postgresql.database.svc.cluster.local
    DB_PORT: "5432"
    DB_USER: superset_user
    DB_PASS: dev-user-password
    DB_NAME: superset

  # Development scaling - single replica
  replicaCount: 1

  # Development resource limits
  resources:
    limits:
      memory: 1Gi
      cpu: 500m
    requests:
      memory: 512Mi
      cpu: 250m

  # DISABLE Pod Disruption Budget for development
  podDisruptionBudget:
    enabled: false

  # DISABLE autoscaling for development
  autoscaling:
    enabled: false

# Superset Worker (Celery) configuration
supersetWorker:
  env:
    SUPERSET_DATABASE_URI: "postgresql://superset_user:dev-user-password@postgresql.database.svc.cluster.local:5432/superset"
    DB_HOST: postgresql.database.svc.cluster.local
    DB_PORT: "5432"
    DB_USER: superset_user
    DB_PASS: dev-user-password
    DB_NAME: superset
  # Single worker for development
  replicaCount: 1

  # Development resource limits
  resources:
    limits:
      memory: 512Mi
      cpu: 250m
    requests:
      memory: 256Mi
      cpu: 125m

  # DISABLE Pod Disruption Budget for development
  podDisruptionBudget:
    enabled: false

  # DISABLE autoscaling for development
  autoscaling:
    enabled: false

# Disable Celery Beat for development
supersetCeleryBeat:
  enabled: false

# Initial setup configuration
init:
  # Load example dashboards and data for development
  loadExamples: true

  # Create admin user
  createAdmin: true
  adminUser:
    username: admin
    firstname: Admin
    lastname: User
    email: admin@example.com
    password: admin

# Service configuration
service:
  type: ClusterIP
  port: 8088

# External Redis configuration - simplified for now
extraEnv:
  REDIS_HOST: redis.database.svc.cluster.local
  REDIS_PORT: "6379"
  # Remove Redis password for now until we get PostgreSQL working

# Ingress configuration (disabled for development - use port-forward)
ingress:
  enabled: false

# Security context
runAsUser: 1000

# Simple bootstrap script for development
bootstrapScript: |
  #!/bin/bash
  pip install --no-cache-dir \
    psycopg2-binary \
    redis
