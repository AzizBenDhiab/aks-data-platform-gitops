# values/kobotoolbox-values.yaml - SIMPLIFIED WORKING VERSION
# KoboToolbox Configuration - FIXED STORAGE

# ==========================================
# POSTGRESQL DATABASE
# ==========================================
postgresql:
  enabled: true
  auth:
    postgresPassword: "kobo-postgres-admin"
    database: "kobotoolbox"
    username: "kobo_user"
    password: "kobo_password"

  primary:
    persistence:
      enabled: true
      size: 20Gi
      storageClass: "managed-csi" # Explicitly set
      accessModes:
        - ReadWriteOnce

    resources:
      limits:
        memory: 1Gi
        cpu: 500m
      requests:
        memory: 512Mi
        cpu: 250m

  readReplicas:
    replicaCount: 0

  volumePermissions:
    enabled: true

  metrics:
    enabled: false

# ==========================================
# MONGODB DATABASE
# ==========================================
mongodb:
  enabled: true
  auth:
    enabled: false

  persistence:
    enabled: true
    size: 10Gi
    storageClass: "managed-csi" # Explicitly set
    accessModes:
      - ReadWriteOnce

  resources:
    limits:
      memory: 512Mi
      cpu: 300m
    requests:
      memory: 256Mi
      cpu: 150m

# ==========================================
# REDIS CACHE
# ==========================================
redis:
  enabled: false # Disable subchart redis

# Custom Redis instances
rediscache:
  enabled: true
  auth:
    enabled: false

  master:
    persistence:
      enabled: true
      size: 5Gi
      storageClass: "managed-csi" # Explicitly set
      accessModes:
        - ReadWriteOnce

    resources:
      limits:
        memory: 256Mi
        cpu: 200m
      requests:
        memory: 128Mi
        cpu: 100m

redismain:
  enabled: true
  auth:
    enabled: false

  master:
    persistence:
      enabled: true
      size: 5Gi
      storageClass: "managed-csi" # Explicitly set
      accessModes:
        - ReadWriteOnce

    resources:
      limits:
        memory: 256Mi
        cpu: 200m
      requests:
        memory: 128Mi
        cpu: 100m

# ==========================================
# KOBOTOOLBOX APPLICATIONS
# ==========================================

# Global configuration
global:
  domain: "kobotoolbox.local"
  https: false

# KPI (Frontend)
kpi:
  image:
    repository: kobotoolbox/kpi
    tag: "2.024.18" # Stable version
    pullPolicy: IfNotPresent

  replicaCount: 1

  resources:
    limits:
      memory: 2Gi
      cpu: 1000m
    requests:
      memory: 1Gi
      cpu: 500m

  persistence:
    enabled: true
    size: 15Gi
    storageClass: "managed-csi" # Explicitly set
    accessMode: ReadWriteOnce

# KoBoCAT (Backend)
kobocat:
  image:
    repository: kobotoolbox/kobocat
    tag: "2.024.18" # Stable version
    pullPolicy: IfNotPresent

  replicaCount: 1

  resources:
    limits:
      memory: 1Gi
      cpu: 500m
    requests:
      memory: 512Mi
      cpu: 250m

  persistence:
    enabled: true
    size: 15Gi
    storageClass: "managed-csi" # Explicitly set
    accessMode: ReadWriteOnce

# Enketo (Form Renderer)
enketo:
  image:
    repository: kobotoolbox/enketo-express
    tag: "2.8.0" # More stable version
    pullPolicy: IfNotPresent

  replicaCount: 1

  resources:
    limits:
      memory: 1Gi
      cpu: 500m
    requests:
      memory: 512Mi
      cpu: 250m

# NGINX (Proxy)
nginx:
  image:
    repository: nginx
    tag: "1.25-alpine"
    pullPolicy: IfNotPresent

  replicaCount: 1

  resources:
    limits:
      memory: 256Mi
      cpu: 200m
    requests:
      memory: 128Mi
      cpu: 100m

# ==========================================
# SERVICE CONFIGURATION
# ==========================================
service:
  type: ClusterIP
  port: 80
  targetPort: 80

ingress:
  enabled: false

# ==========================================
# SECURITY & OPERATIONS
# ==========================================
podSecurityContext:
  fsGroup: 1000

securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  allowPrivilegeEscalation: false

serviceAccount:
  create: true
  annotations: {}
  name: "kobotoolbox"

# Health checks with longer timeouts
livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 300
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 180
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

startupProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 60
  periodSeconds: 15
  timeoutSeconds: 5
  failureThreshold: 60 # Allow 15 minutes for startup

podDisruptionBudget:
  enabled: false

autoscaling:
  enabled: false

nodeSelector: {}
tolerations: []
affinity: {}
