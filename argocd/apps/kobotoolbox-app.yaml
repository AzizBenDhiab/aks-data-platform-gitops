apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kobotoolbox
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "3"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  sources:
    # Manifests for SecretProviderClass and ServiceAccount
    - repoURL: https://github.com/AzizBenDhiab/aks-data-platform-gitops.git
      targetRevision: HEAD
      path: manifests/kobotoolbox
    # Helm chart
    - repoURL: https://github.com/AzizBenDhiab/oaf-public-charts.git
      targetRevision: main
      path: charts/kobotoolbox
      helm:
        values: |
          # Global configuration
          global:
            storageClass: "managed-csi"
            redis:
              existingSecret: "kobotoolbox-secrets"
              existingSecretPasswordKey: "redis-password"

          # Redis configuration
          rediscache:
            enabled: true
            usePassword: true
            architecture: "standalone"
          
          redismain:
            enabled: true
            usePassword: true
            architecture: "standalone"

          # General configuration
          general:
            externalDomain: "kobotoolbox.local"
            externalScheme: "http"
            externalPort: ""
            replicas: 1
            debug: false
            serviceType: "ClusterIP"
            forceInternal: false
            supportEmail: "support@kobotoolbox.local"
            
            # Super user configuration using existing secret
            superUser:
              username: "admin"
              existingSecret: "kobotoolbox-secrets"
              existingSecretPasswordKey: "admin-password"
            
            # Django secret - use existing secret reference
            djangoSecret:
              existingSecret: "kobotoolbox-secrets"
              existingSecretKey: "django-secret"
            
            # Media storage configuration
            mediaStorage:
              enabled: false
              size: "10Gi"
              storageClass: "managed-csi"
              accessMode: "ReadWriteOnce"
            
            # Sentry configuration
            sentry:
              environment: "production"

          # PostgreSQL configuration using existing secret
          postgresql:
            enabled: true
            kobocatDatabase: "kobocat"
            kpiDatabase: "koboform"
            auth:
              existingSecret: "kobotoolbox-secrets"
              secretKeys:
                adminPasswordKey: "postgres-admin-password"
                userPasswordKey: "postgres-user-password"
              username: "postgres"

          # MongoDB configuration using existing secret
          mongodb:
            enabled: true
            auth:
              existingSecret: "kobotoolbox-secrets"
              secretKeys:
                rootPasswordKey: "mongo-root-password"
                userPasswordKey: "mongo-user-password"
              username: "kobo"
              database: "formhub"

          # Application image tags
          kpi:
            image:
              tag: "2.022.24d"
            subdomain: "kobo"

          kobocat:
            image:
              tag: "2.022.24a"
            subdomain: "kc"

          enketo:
            image:
              tag: "3.0.4"
            replicas: 1
            subdomain: "ee"

          nginx:
            image:
              tag: "1.21"

          # Ingress (disabled)
          ingress:
            enabled: false

          # Monitoring (disabled for now)
          uwsgiExporter:
            enabled: false
          
          flower:
            enabled: false

          # Probes (enabled)
          probes:
            enabled: true

          # Priority class
          priorityClass: ""

          # SMTP (disabled for development)
          smtp:
            host: ""
            user: ""
            password: ""
            from: ""

          # External services (disabled)
          external:
            google:
              apiKey: ""
              analyticsToken: ""
            ravenDSN:
              kobocat: ""
              kpi: ""
              kpiJs: ""

          # Service account configuration (for workload identity)
          serviceAccount:
            create: false
            name: "kobotoolbox-workload-identity"

          # Workload identity labels
          podLabels:
            azure.workload.identity/use: "true"

        valueFiles:
          - $values/values/kobotoolbox-values.yaml
    # Values repository
    - repoURL: https://github.com/AzizBenDhiab/aks-data-platform-gitops.git
      targetRevision: HEAD
      ref: values
  destination:
    server: https://kubernetes.default.svc
    namespace: kobotoolbox
  syncPolicy:
    # automated:
    #   prune: true
    #   selfHeal: true
    #   allowEmpty: false
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - Replace=true
    retry:
      limit: 5
      backoff:
        duration: 10s
        factor: 2
        maxDuration: 15m
  revisionHistoryLimit: 3